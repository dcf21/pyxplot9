# ex_nanotubes.ppl
#
# The code in this file is part of Pyxplot
# <http://www.pyxplot.org.uk>
#
# Copyright (C) 2006-2013 Dominic Ford <coders@pyxplot.org.uk>
#               2008-2013 Ross Church
#
# $Id$
#
# Pyxplot is free software; you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# You should have received a copy of the GNU General Public License along with
# Pyxplot; if not, write to the Free Software Foundation, Inc., 51 Franklin
# Street, Fifth Floor, Boston, MA  02110-1301, USA

# ----------------------------------------------------------------------------

# This script produces a figure for the Pyxplot Users' Guide

# Call common initialisation script
reset
title = "ex_nanotubes"
load "examples/fig_init.ppl"

# BEGIN
basisAngleX =   0*unit(deg)
basisAngleY = 120*unit(deg)
lineLen     =   5*unit(mm)

# Set up a transformation matrix
transformMat = matrix([[sin(basisAngleX),sin(basisAngleY)], \
                       [cos(basisAngleX),cos(basisAngleY)] ])
transformMat *= lineLen

subroutine line(p1,p2,lw)
 {
  line from transformMat*p1 to transformMat*p2 with linewid lw
 }

subroutine hexagon(p,lw)
 {
  call line(p+vector([ 0, 0]),p+vector([ 0,-1]),lw)
  call line(p+vector([ 0,-1]),p+vector([ 1,-1]),lw)
  call line(p+vector([ 1,-1]),p+vector([ 2, 0]),lw)
  call line(p+vector([ 2, 0]),p+vector([ 2, 1]),lw)
  call line(p+vector([ 2, 1]),p+vector([ 1, 1]),lw)
  call line(p+vector([ 1, 1]),p+vector([ 0, 0]),lw)
 }

set multiplot ; set nodisplay

for x=0 to 10
 {
  for y=0 to x+1
   {
    p = vector([x+2*y , 2*x+y])
    call hexagon(p, ((x-y)%3==0)?4:1)
    text '%d,%d'%(x,y) at transformMat*(p+vector([1,0])) \
      hal cen val cen
   }
 }

set display ; refresh
# END

# Call common cleanup script
load "examples/fig_end.ppl"

